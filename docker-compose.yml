services:
  kafka-1:
    image: apache/kafka:3.9.0
    container_name: kafka-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'U2NEMTBGUkIxNUYzQThDMk'

  kafka-2:
    image: apache/kafka:3.9.0
    container_name: kafka-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:19092
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'U2NEMTBGUkIxNUYzQThDMk'

  kafka-3:
    image: apache/kafka:3.9.0
    container_name: kafka-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:19092
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'U2NEMTBGUkIxNUYzQThDMk'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.0
    container_name: schema-registry
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9090:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry

  # Application Services
  streams-api:
    build:
      context: .
      dockerfile: streams-api/Dockerfile
    container_name: streams-api
    ports:
      - "80:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_TOPIC_PREFIX: local
      HOST: streams-api
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry

  ticket-streams:
    build:
      context: .
      dockerfile: ticket-streams/Dockerfile
    container_name: ticket-streams
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_TOPIC_PREFIX: local
      HOST: ticket-streams
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry

  booking-streams:
    build:
      context: .
      dockerfile: booking-streams/Dockerfile
    container_name: booking-streams
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_TOPIC_PREFIX: local
      HOST: booking-streams
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry